{"version":3,"sources":["browser/mocha-utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","mochaUtils","window","self","goog","addEventListener","event","data","ports","postMessage","ready","startInBrowserMochaTests","then","results","error","../utils/mocha.js","2","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","MochaUtils","this","value","_this","Promise","resolve","passedTests","failedTests","mocha","checkLeaks","runResults","run","total","testResults","passed","failed","on","test","push","_getFriendlyTestResult","suite","suites","console","warn","swPath","sendMessage","swController","testName","timeout","reject","messageChannel","MessageChannel","port1","onmessage","port2","setTimeout","swUtils","activateSW","iframe","contentWindow","navigator","serviceWorker","registration","active","sw","msgResponse","browserName","driver","url","driverPromise","get","executeScript","userAgent","log","wait","testsuite","thenCatch","testResult","friendlyResult","parentTitle","parent","title","state","err","errMessage","message","identifier","errorMessage","map","failedTest","join"],"mappings":"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","file":"browser/mocha-utils.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/**\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/* eslint-env browser */\n\n(function () {\n  var mochaUtils = require('../utils/mocha.js');\n\n  /* eslint-disable no-negated-condition */\n  if (typeof window === 'undefined') {\n    self.goog = self.goog || {};\n    self.goog.mochaUtils = self.goog.mochaUtils || mochaUtils;\n\n    self.addEventListener('message', function (event) {\n      switch (event.data) {\n        case 'ready-check':\n          {\n            event.ports[0].postMessage({\n              ready: true\n            });\n            break;\n          }\n        case 'start-tests':\n          {\n            self.goog.mochaUtils.startInBrowserMochaTests().then(function (results) {\n              event.ports[0].postMessage(results);\n            });\n            break;\n          }\n        default:\n          {\n            event.ports[0].postMessage({\n              error: 'Unknown test name: ' + event.data\n            });\n            break;\n          }\n      }\n    });\n  } else {\n    window.goog = window.goog || {};\n    window.goog.mochaUtils = window.goog.mochaUtils || mochaUtils;\n  }\n})();\n\n},{\"../utils/mocha.js\":2}],2:[function(require,module,exports){\n'use strict';\n\n/* eslint-env node, browser, worker, mocha */\n\n/**\n * The results from a set of Mocha tests\n *\n * @typedef {Object} MochaTestResults\n * @property {Array<MochaTestResult>} passed   Tests that have passed\n * @property {Array<MochaTestResult>} failed   Tests that have failed\n */\n\n/**\n * @typedef {Object} MochaTestResult\n * @property {String} parentTitle  Title of the parent test suite\n * @property {String} title        Title of the test case\n * @property {String} state        State of the test - 'passed' or 'failed'\n * @property {String} errMessage   This is defined if the test threw an error\n */\n\n/**\n * <p>This class is a helper that will run Mocha tests and offers consistent\n * error reporting.</p>\n *\n * @example <caption>Usage in Browser Window</caption>\n * <script src=\"/node_modules/sw-testing-helpers/browser/mocha-utils.js\"></script>\n * <script>\n * console.log(window.goog.mochaUtils);\n * </script>\n *\n * @example <caption>Usage in Service Worker</caption>\n * importScripts('/node_modules/sw-testing-helpers/browser/mocha-utils.js');\n * console.log(self.goog.mochaUtils);\n *\n * @example <caption>Usage in Node</caption>\n * const mochaUtils = require('sw-testing-helpers').mochaUtils;\n * console.log(mochaUtils);\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MochaUtils = function () {\n  function MochaUtils() {\n    _classCallCheck(this, MochaUtils);\n  }\n\n  _createClass(MochaUtils, [{\n    key: 'startInBrowserMochaTests',\n\n    /**\n     * Start Mocha tests in a browser, checking for leaks and\n     * collect passed / failed results, resolving the promise with the results\n     * in a friendly format.\n     *\n     * @return {Promise<MochaTestResults>} The resutls from the Mocha test\n     */\n    value: function startInBrowserMochaTests() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var passedTests = [];\n        var failedTests = [];\n\n        mocha.checkLeaks();\n\n        var runResults = mocha.run();\n\n        if (runResults.total === 0) {\n          resolve({\n            testResults: {\n              passed: passedTests,\n              failed: failedTests\n            }\n          });\n          return;\n        }\n\n        // pass, fail and end events allow up to capture results and\n        // determine when to publish test results\n        runResults.on('pass', function (test) {\n          passedTests.push(_this._getFriendlyTestResult(test));\n        }).on('fail', function (test) {\n          failedTests.push(_this._getFriendlyTestResult(test));\n        }).on('end', function () {\n          resolve({\n            testResults: {\n              passed: passedTests,\n              failed: failedTests\n            }\n          });\n        });\n\n        // No tests so end won't be called\n        if (mocha.suite.suites.length === 0) {\n          console.warn('No tests found.');\n          resolve({\n            testResults: {\n              passed: passedTests,\n              failed: failedTests\n            }\n          });\n        }\n      });\n    }\n\n    /**\n     * <p>Register a service worker and send a message to the service\n     * worker to start running Mocha tests in the worker.</p>\n     *\n     * <p>It's expected that the service worker will import `mocha-utils.js` to\n     * make this work seamlessly.</p>\n     *\n     * <p>This requires `window-utils.js` to be added to the page.</p>\n     *\n     * @param  {String} swPath The path to a service worker\n     * @return {Promise.<MochaTestResults>}        Promise resolves when the tests\n     * in the service worker have completed, returned the results.\n     */\n\n  }, {\n    key: 'startServiceWorkerMochaTests',\n    value: function startServiceWorkerMochaTests(swPath) {\n      var sendMessage = function sendMessage(swController, testName, timeout) {\n        return new Promise(function (resolve, reject) {\n          var messageChannel = new MessageChannel();\n          messageChannel.port1.onmessage = function (event) {\n            resolve(event.data);\n          };\n\n          swController.postMessage(testName, [messageChannel.port2]);\n\n          if (timeout) {\n            setTimeout(function () {\n              return reject(new Error('Message Timeout'));\n            }, timeout);\n          }\n        });\n      };\n\n      return window.goog.swUtils.activateSW(swPath).then(function (iframe) {\n        return iframe.contentWindow.navigator.serviceWorker.ready.then(function (registration) {\n          return registration.active;\n        }).then(function (sw) {\n          return sendMessage(sw, 'ready-check', 400).then(function (msgResponse) {\n            if (!msgResponse.ready) {\n              return Promise.reject();\n            }\n\n            return sw;\n          }).catch(function () {\n            throw new Error('Service worker failed to respond to the ready ' + 'check. Have you imported browser/mocha-utils.js in the SW?');\n          });\n        }).then(function (sw) {\n          return sendMessage(sw, 'start-tests');\n        }).then(function (msgResponse) {\n          if (!msgResponse.testResults) {\n            throw new Error('Unexpected test result: ' + msgResponse);\n          }\n\n          // Print test failues\n          return msgResponse.testResults;\n        });\n      });\n    }\n\n    /**\n     * <p>Print the User Agent of the browser, load the page\n     * the Mocha tests are in and wait for the results.</p>\n     *\n     * @param  {String} browserName Name to be printed with the browsers UserAgent\n     * @param  {WebDriver} driver   Instance of a {@link http://selenium.googlecode.com/git/docs/api/javascript/class_webdriver_WebDriver.html | WebDriver}\n     * @param  {String} url         URL of that has mocha tests.\n     * @return {Promise<MochaTestResults>}   Returns the results from the browsers tests\n     */\n\n  }, {\n    key: 'startWebDriverMochaTests',\n    value: function startWebDriverMochaTests(browserName, driver, url) {\n      // The driver methods are wrapped in a new promise because the\n      // selenium-webdriver API seems to using some custom promise\n      // implementation that has slight behaviour differences.\n      return new Promise(function (resolve, reject) {\n        var driverPromise = driver.get(url).then(function () {\n          return driver.executeScript(function () {\n            return window.navigator.userAgent;\n          });\n        }).then(function (userAgent) {\n          // This is just to help with debugging so we can get the browser version\n          console.log('        [' + browserName + ' UA]: ' + userAgent);\n        }).then(function () {\n          // We get webdriver to wait until window.testsuite.testResults is defined.\n          // This is set in the in browser mocha tests when the tests have finished\n          // successfully\n          return driver.wait(function () {\n            return driver.executeScript(function () {\n              return typeof window.testsuite !== 'undefined' && typeof window.testsuite.testResults !== 'undefined';\n            });\n          });\n        }).then(function () {\n          // This simply retrieves the test results from the inbrowser mocha tests\n          return driver.executeScript('return window.testsuite.testResults;');\n        }).then(function (testResults) {\n          // Resolve the outer promise to get out of the webdriver promise chain\n          resolve(testResults);\n        });\n\n        if (driverPromise.thenCatch) {\n          driverPromise.thenCatch(reject);\n        } else {\n          driverPromise.catch(reject);\n        }\n      });\n    }\n  }, {\n    key: '_getFriendlyTestResult',\n    value: function _getFriendlyTestResult(testResult) {\n      var friendlyResult = {\n        parentTitle: testResult.parent.title,\n        title: testResult.title,\n        state: testResult.state\n      };\n\n      if (testResult.err) {\n        friendlyResult.errMessage = testResult.err.message;\n      }\n\n      return friendlyResult;\n    }\n\n    /**\n     * Present any failed tests in a friendly format. Useful if you are running\n     * tests on a CI like Travis and want to be able to understand the errors\n     * quickly.\n     *\n     * @param  {String} identifier  This will be printed at the top of the output.\n     * It should be something that will help you identify which tests these logs\n     * belong to (i.e. the service worker file, or browser name).\n     * @param  {MochaTestRestuls} testResults The results to log.\n     * @return {String}           The return is a string that can be prited to\n     * standard out. If there are any errors this method will return null.\n     */\n\n  }, {\n    key: 'prettyPrintErrors',\n    value: function prettyPrintErrors(identifier, testResults) {\n      // Print test failues\n      if (testResults.failed.length > 0) {\n        var failedTests = testResults.failed;\n        var errorMessage = 'Issues in ' + identifier + '.\\n\\n' + identifier + ' had ' + testResults.failed.length + ' test failures.\\n';\n        errorMessage += '------------------------------------------------\\n';\n        errorMessage += failedTests.map(function (failedTest, i) {\n          return '[Failed Test ' + (i + 1) + ']\\n' + ('    - ' + failedTest.parentTitle + ' > ' + failedTest.title + '\\n') + ('        ' + failedTest.errMessage + '\\n');\n        }).join('\\n');\n        errorMessage += '------------------------------------------------\\n';\n        return errorMessage;\n      }\n      return null;\n    }\n  }]);\n\n  return MochaUtils;\n}();\n\nif (typeof module === 'undefined' || typeof module.exports === 'undefined') {\n  throw new Error('To use MochaUtils in the browser please use the ' + 'browser/mocha-utils.js file');\n}\n\nmodule.exports = new MochaUtils();\n\n},{}]},{},[1]);\n"],"sourceRoot":"/source/"}